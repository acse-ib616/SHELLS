% IÃ±igo Basterretxea Jacob 01246662

% Function with LST element stiffness formulation mathematically derived in
% Maple. k has been generated by Maple's CodeGenerator feature

% Inputs:
% - x1, x2, x3, y1, y2, y3: coordinates at the nodes n1, n2, n3
% - nu: Poisson ratio
% - E: Young's Modulus
% - nu: Poisson ratio

% Output:
% - 6x6 LST element stiffness matrix
function k = k_mat_LST(x1,x2,x3,y1,y2,y3,nu,E,t)

k = [t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) ^ 2) + ((4 * x2 - 4 * x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * y2 + 4 * y3) ^ 2) + 0.2e1 * ((4 * x2 - 4 * x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (3 * y2 - 3 * y3) * (-4 * y2 + 4 * y3)) + 0.2e1 * (-3 * x2 + 3 * x3) * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.3e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) ^ 2) + ((-3 * x2 + 3 * x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x2 - 4 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y2 + 4 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * y2 + 4 * y3) * nu * (4 * x2 - 4 * x3)) + 0.2e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y2 + 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (4 * x2 - 4 * x3)) + ((-4 * y2 + 4 * y3) * nu * (-3 * x2 + 3 * x3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y2 + 4 * y3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (3 * y2 - 3 * y3)) / 0.3e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-3 * x2 + 3 * x3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (3 * y2 - 3 * y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * (-y1 + y3)) - ((-4 * y2 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y2 + 4 * y3) * (-y1 + y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((3 * y2 - 3 * y3) * (-y1 + y3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) + ((-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-x1 + x3)) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-x1 + x3)) - (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * (-y1 + y2)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-y1 + y2)) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * (-y1 + y2)) + ((-4 * y2 + 4 * y3) * (-y1 + y2)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (-y1 + y2)) - (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x2)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y2 + 4 * y3) * nu * (-x1 + x2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * nu * (-x1 + x2)) - ((-4 * y2 + 4 * y3) * nu * (-x1 + x2)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((3 * y2 - 3 * y3) * nu * (-x1 + x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) - (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * (-y1 + y3)) + (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * (-y1 + y3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) - (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * (-y1 + y3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-4 * y1 + 4 * y2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-4 * y1 + 4 * y2)) + ((-4 * y2 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (-4 * y1 + 4 * y2)) + ((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + ((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x1 - 4 * x2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y2 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + ((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x2 - 4 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y2 + 4 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * y2 + 4 * y3) * nu * (4 * x2 - 4 * x3)) + 0.2e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y2 + 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (4 * x2 - 4 * x3)) + ((-4 * y2 + 4 * y3) * nu * (-3 * x2 + 3 * x3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y2 + 4 * y3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (3 * y2 - 3 * y3)) / 0.3e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-3 * x2 + 3 * x3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (3 * y2 - 3 * y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) ^ 2) + ((-4 * y2 + 4 * y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (4 * x2 - 4 * x3) ^ 2) + 0.2e1 * ((-4 * y2 + 4 * y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-3 * x2 + 3 * x3) * (4 * x2 - 4 * x3)) + 0.2e1 * (3 * y2 - 3 * y3) * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.3e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) ^ 2) + ((3 * y2 - 3 * y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) - ((4 * x2 - 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-3 * x2 + 3 * x3) * nu * (-y1 + y3)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) + ((4 * x2 - 4 * x3) * (-x1 + x3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-x1 + x3)) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-x1 + x3)) - (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * nu * (-y1 + y2)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-y1 + y2)) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y2)) + ((4 * x2 - 4 * x3) * nu * (-y1 + y2)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (-y1 + y2)) - (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * (-x1 + x2)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x2 - 4 * x3) * (-x1 + x2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * (-x1 + x2)) - ((4 * x2 - 4 * x3) * (-x1 + x2)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-3 * x2 + 3 * x3) * (-x1 + x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) - (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) + (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * (-x1 + x3)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) - (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) - (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-4 * y1 + 4 * y2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-4 * y1 + 4 * y2)) + ((4 * x2 - 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (-4 * y1 + 4 * y2)) + ((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + ((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (4 * x1 - 4 * x2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (4 * x1 - 4 * x2)) + ((4 * x2 - 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (4 * x1 - 4 * x2)) + ((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + ((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * (-y1 + y3)) - ((-4 * y2 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y2 + 4 * y3) * (-y1 + y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((3 * y2 - 3 * y3) * (-y1 + y3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) - ((4 * x2 - 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-3 * x2 + 3 * x3) * nu * (-y1 + y3)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-y1 + y3) ^ 2) + 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(8 * (-y1 + y3) ^ 2) - 0.8e1 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-y1 + y3) ^ 2) + ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-16 * y1 + 16 * y3) * nu * (-x1 + x3)) - (-16 * x1 + 16 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((8 * y1 - 8 * y3) * nu * (-x1 + x3)) - (8 * x1 - 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-y1 + y3) * nu * (-x1 + x3)) - (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * (-y1 + y2)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-y1 + y2)) + (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * (-y1 + y2)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (-y1 + y2)) + (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x2)) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y3) * nu * (-x1 + x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * nu * (-x1 + x2)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y3) * nu * (-x1 + x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) - (-4 * x1 + 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * (-4 * y1 + 4 * y3) * (-y1 + y3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * (-y1 + y3)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * (-y1 + y3)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * nu * (-x1 + x3)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * nu * (-x1 + x3)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y1 + 4 * y3) * (-y1 + y3)) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (4 * y1 - 4 * y2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * (-y1 + y3)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (-4 * x1 + 4 * x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * nu * (-x1 + x3)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (-4 * y1 + 4 * y2)) + ((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (4 * y1 - 4 * y2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (-4 * x1 + 4 * x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) + ((-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-x1 + x3)) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-x1 + x3)) - (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) + ((4 * x2 - 4 * x3) * (-x1 + x3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-x1 + x3)) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-x1 + x3)) - (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-16 * y1 + 16 * y3) * nu * (-x1 + x3)) - (-16 * x1 + 16 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((8 * y1 - 8 * y3) * nu * (-x1 + x3)) - (8 * x1 - 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-y1 + y3) * nu * (-x1 + x3)) - (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-x1 + x3) ^ 2) + 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(8 * (-x1 + x3) ^ 2) - 0.8e1 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-x1 + x3) ^ 2) + ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y2)) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-y1 + y2)) - (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * nu * (-y1 + y2)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (-y1 + y2)) - (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * x1 + 4 * x3) * (-x1 + x2)) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x3) * (-x1 + x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * (-x1 + x2)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x3) * (-x1 + x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y3)) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) - (4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * nu * (-y1 + y3)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * nu * (-y1 + y3)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (-4 * y1 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * x1 + 4 * x3) * (-x1 + x3)) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (-4 * x1 + 4 * x3) * (-x1 + x3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * (-x1 + x3)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * (-x1 + x3)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (4 * y1 - 4 * y2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * nu * (-y1 + y3)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * x1 + 4 * x3) * (-x1 + x3)) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (-4 * x1 + 4 * x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * (-x1 + x3)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (-4 * y1 + 4 * y2)) - ((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (4 * y1 - 4 * y2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (4 * x1 - 4 * x2)) - ((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (-4 * x1 + 4 * x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * (-y1 + y2)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-y1 + y2)) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * (-y1 + y2)) + ((-4 * y2 + 4 * y3) * (-y1 + y2)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2) - (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (-y1 + y2)) - (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * nu * (-y1 + y2)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-y1 + y2)) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y2)) + ((4 * x2 - 4 * x3) * nu * (-y1 + y2)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2) - (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (-y1 + y2)) - (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * (-y1 + y2)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-y1 + y2)) + (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * (-y1 + y2)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (-y1 + y2)) + (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y2)) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-y1 + y2)) - (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * nu * (-y1 + y2)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (-y1 + y2)) - (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-y1 + y2) ^ 2) + 0.16e2 * ((-x1 + x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(8 * (-y1 + y2) ^ 2) - 0.8e1 * ((-x1 + x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-y1 + y2) ^ 2) + ((-x1 + x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-16 * y1 + 16 * y2) * nu * (-x1 + x2)) - (-16 * x1 + 16 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((8 * y1 - 8 * y2) * nu * (-x1 + x2)) - (8 * x1 - 8 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-y1 + y2) * nu * (-x1 + x2)) - (-x1 + x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * y1 + 4 * y2 - 8 * y3) * (-4 * y1 + 4 * y2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) + 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (4 * y1 + 4 * y2 - 8 * y3)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y2) * (-y1 + y3)) - (4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) + 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y2) * (-y1 + y3)) - 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 - 4 * x2 + 8 * x3) * nu * (-4 * y1 + 4 * y2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) - 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y2) * nu * (-x1 + x3)) + (4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) - 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y2) * nu * (-x1 + x3)) + 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (4 * y1 - 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y2) * (-y1 + y3)) - 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (-4 * x1 + 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y2) * nu * (-x1 + x3)) + 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) ^ 2) + (-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 8 * y2 - 4 * y3) * (-4 * y1 + 4 * y2)) + (-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (-4 * y1 + 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (-4 * y1 + 8 * y2 - 4 * y3)) - ((4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (4 * y1 - 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) * nu * (4 * x1 - 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (4 * x1 - 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - ((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (-4 * x1 + 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x2)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y2 + 4 * y3) * nu * (-x1 + x2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * nu * (-x1 + x2)) - ((-4 * y2 + 4 * y3) * nu * (-x1 + x2)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((3 * y2 - 3 * y3) * nu * (-x1 + x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * (-x1 + x2)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.8e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x2 - 4 * x3) * (-x1 + x2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * (-x1 + x2)) - ((4 * x2 - 4 * x3) * (-x1 + x2)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-3 * x2 + 3 * x3) * (-x1 + x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x2)) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y3) * nu * (-x1 + x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * nu * (-x1 + x2)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y3) * nu * (-x1 + x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * x1 + 4 * x3) * (-x1 + x2)) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x3) * (-x1 + x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * (-x1 + x2)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x3) * (-x1 + x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-16 * y1 + 16 * y2) * nu * (-x1 + x2)) - (-16 * x1 + 16 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((8 * y1 - 8 * y2) * nu * (-x1 + x2)) - (8 * x1 - 8 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-y1 + y2) * nu * (-x1 + x2)) - (-x1 + x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-x1 + x2) ^ 2) + 0.16e2 * ((-y1 + y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(8 * (-x1 + x2) ^ 2) - 0.8e1 * ((-y1 + y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-x1 + x2) ^ 2) + ((-y1 + y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (4 * y1 + 4 * y2 - 8 * y3)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x2) * nu * (-y1 + y3)) + (4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) + 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x2) * nu * (-y1 + y3)) + 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * (-4 * x1 + 4 * x2)) - (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (-4 * x1 - 4 * x2 + 8 * x3)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x2) * (-x1 + x3)) - (4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) - 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x2) * (-x1 + x3)) - 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) + 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (4 * y1 - 4 * y2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x2) * nu * (-y1 + y3)) + 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) ^ 2) - (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) - 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (-4 * x1 + 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x2) * (-x1 + x3)) - 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) - (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (-4 * y1 + 4 * y2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + ((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) - (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (4 * y1 - 4 * y2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2)) - ((-4 * y1 + 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3)) - (-4 * y1 + 8 * y2 - 4 * y3) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (4 * x1 - 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (4 * x1 - 8 * x2 + 4 * x3)) + ((-4 * x1 + 4 * x2) ^ 2) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) - (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (-4 * x1 + 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) - (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * (-y1 + y3)) + (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * (-y1 + y3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) - (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) + (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) - (-4 * x1 + 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (4 * y1 + 4 * y2 - 8 * y3)) + (4 * (-4 * y1 + 4 * y3) * (-y1 + y3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * (-y1 + y3)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * (-y1 + y3)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y3)) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (4 * y1 + 4 * y2 - 8 * y3)) - (4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * nu * (-y1 + y3)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * nu * (-y1 + y3)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * y1 + 4 * y2 - 8 * y3) * (-4 * y1 + 4 * y2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) + 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (4 * y1 + 4 * y2 - 8 * y3)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y2) * (-y1 + y3)) - (4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) + 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y2) * (-y1 + y3)) - 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (4 * y1 + 4 * y2 - 8 * y3)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 - 4 * x2 + 8 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x2) * nu * (-y1 + y3)) + (4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3) + 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x2) * nu * (-y1 + y3)) + 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) ^ 2) + ((-4 * x1 - 4 * x2 + 8 * x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (4 * y1 - 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) - 0.2e1 * (4 * x1 - 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.7e1 / 0.12e2 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-y1 + y3) ^ 2) + 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * y1 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3)) - 0.2e1 * (-4 * x1 + 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(32 * (-y1 + y3) ^ 2) - 0.32e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (4 * y1 + 4 * y2 - 8 * y3) * nu * (-x1 + x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.7e1 / 0.12e2 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-16 * y1 + 16 * y3) * nu * (-x1 + x3)) - (-16 * x1 + 16 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (4 * y1 + 4 * y2 - 8 * y3) * nu * (-x1 + x3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((32 * y1 - 32 * y3) * nu * (-x1 + x3)) - (32 * x1 - 32 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * (4 * y1 - 4 * y2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * (4 * y1 - 4 * y2)) + (4 * (4 * y1 + 4 * y2 - 8 * y3) * (-y1 + y3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(16 * (-y1 + y3) ^ 2) - 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-y1 + y3) ^ 2) + 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (4 * (4 * y1 + 4 * y2 - 8 * y3) * nu * (-x1 + x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * y1 - 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * (-4 * y1 + 4 * y2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * (-4 * y1 + 4 * y2)) + ((4 * y1 + 4 * y2 - 8 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 4 * y2)) + ((4 * y1 + 4 * y2 - 8 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + ((4 * y1 - 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (4 * x1 - 4 * x2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((4 * y1 + 4 * y2 - 8 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + ((4 * y1 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) - (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * (-x1 + x3)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) - (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * nu * (-x1 + x3)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * nu * (-x1 + x3)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (-4 * y1 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * x1 + 4 * x3) * (-x1 + x3)) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (-4 * x1 + 4 * x3) * (-x1 + x3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * (-x1 + x3)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * (-x1 + x3)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 - 4 * x2 + 8 * x3) * nu * (-4 * y1 + 4 * y2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) - 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y2) * nu * (-x1 + x3)) + (4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) - 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y2) * nu * (-x1 + x3)) + 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * (-4 * x1 + 4 * x2)) - (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (-4 * x1 - 4 * x2 + 8 * x3)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x2) * (-x1 + x3)) - (4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3) - 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x2) * (-x1 + x3)) - 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) + (4 * (4 * y1 + 4 * y2 - 8 * y3) * nu * (-x1 + x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) - 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.7e1 / 0.12e2 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-16 * y1 + 16 * y3) * nu * (-x1 + x3)) - (-16 * x1 + 16 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 - 4 * x2 + 8 * x3)) - (4 * (4 * y1 + 4 * y2 - 8 * y3) * nu * (-x1 + x3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 + 4 * y2 - 8 * y3) + 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((32 * y1 - 32 * y3) * nu * (-x1 + x3)) - (32 * x1 - 32 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) ^ 2) + ((4 * y1 + 4 * y2 - 8 * y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(2 * (4 * x1 - 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + 0.2e1 * (4 * y1 - 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.7e1 / 0.12e2 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-x1 + x3) ^ 2) + 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(2 * (-4 * x1 + 4 * x3) * (-4 * x1 - 4 * x2 + 8 * x3)) + 0.2e1 * (-4 * y1 + 4 * y3) * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(32 * (-x1 + x3) ^ 2) - 0.32e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * nu * (4 * y1 - 4 * y2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (4 * (-4 * x1 - 4 * x2 + 8 * x3) * nu * (-y1 + y3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * y1 - 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * (-4 * x1 + 4 * x2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * (-4 * x1 + 4 * x2)) - (4 * (-4 * x1 - 4 * x2 + 8 * x3) * (-x1 + x3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(16 * (-x1 + x3) ^ 2) - 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-x1 + x3) ^ 2) + 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * nu * (-4 * y1 + 4 * y2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * nu * (-4 * y1 + 4 * y2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 4 * y2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) - ((4 * x1 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * (4 * x1 - 4 * x2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * (4 * x1 - 4 * x2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 4 * x2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) - ((4 * x1 - 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y2 + 4 * y3) * (-y1 + y3)) - 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (3 * y2 - 3 * y3) * (-y1 + y3)) - 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (4 * x2 - 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-3 * x2 + 3 * x3) * nu * (-y1 + y3)) - 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * y1 + 4 * y3) * (-y1 + y3)) + 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (4 * y1 - 4 * y2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y3) * (-y1 + y3)) + 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * x1 + 4 * x3) * nu * (-y1 + y3)) - 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (4 * y1 - 4 * y2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x3) * nu * (-y1 + y3)) - 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (4 * y1 - 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y2) * (-y1 + y3)) - 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) + 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (4 * y1 - 4 * y2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x2) * nu * (-y1 + y3)) + 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * (4 * y1 - 4 * y2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * (4 * y1 - 4 * y2)) + (4 * (4 * y1 + 4 * y2 - 8 * y3) * (-y1 + y3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(16 * (-y1 + y3) ^ 2) - 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-y1 + y3) ^ 2) + 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * nu * (4 * y1 - 4 * y2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (4 * (-4 * x1 - 4 * x2 + 8 * x3) * nu * (-y1 + y3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2) - 0.4e1 * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-x1 + x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * y1 - 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) ^ 2) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((8 * (-y1 + y3) * (4 * y1 - 4 * y2)) - 0.8e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-y1 + y3) ^ 2) + 0.16e2 * ((-x1 + x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - (4 * (-x1 + x3) * nu * (4 * y1 - 4 * y2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(16 * (-y1 + y3) * nu * (-x1 + x3)) - 0.16e2 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + (-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) + ((4 * y1 - 4 * y2) * (-4 * y1 + 8 * y2 - 4 * y3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) ^ 2) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (4 * y1 - 4 * y2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (4 * x1 - 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (4 * x1 - 4 * x2)) + ((4 * y1 - 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y2 + 4 * y3) * nu * (-x1 + x3)) + 0.4e1 * (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (3 * y2 - 3 * y3) * nu * (-x1 + x3)) + 0.4e1 * (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) - (4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * x2 - 4 * x3) * (-x1 + x3)) + 0.4e1 * (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-3 * x2 + 3 * x3) * (-x1 + x3)) + 0.4e1 * (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (-4 * x1 + 4 * x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (y1 - y3) * nu * (-x1 + x3)) - 0.4e1 * (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-4 * x1 + 4 * x3) * (-x1 + x3)) + 0.4e1 * (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (-4 * x1 + 4 * x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (x1 - x3) * (-x1 + x3)) + 0.4e1 * (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (-4 * x1 + 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (y1 - y2) * nu * (-x1 + x3)) + 0.4e1 * (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) ^ 2) - (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) - 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (-4 * x1 + 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (x1 - x2) * (-x1 + x3)) - 0.4e1 * (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (4 * (4 * y1 + 4 * y2 - 8 * y3) * nu * (-x1 + x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (4 * y1 - 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-4 * y1 + 4 * y3) * nu * (-x1 + x3)) - 0.4e1 * (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * (-4 * x1 + 4 * x2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * (-4 * x1 + 4 * x2)) - (4 * (-4 * x1 - 4 * x2 + 8 * x3) * (-x1 + x3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(16 * (-x1 + x3) ^ 2) - 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-x1 + x3) ^ 2) + 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - (4 * (-x1 + x3) * nu * (4 * y1 - 4 * y2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(16 * (-y1 + y3) * nu * (-x1 + x3)) - 0.16e2 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-y1 + y3)) / 0.12e2) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) ^ 2) + ((4 * y1 - 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(8 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.8e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((16 * (-x1 + x3) ^ 2) + 0.16e2 * ((-y1 + y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) + ((-4 * y1 + 8 * y2 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (4 * y1 - 4 * y2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2)) + (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (4 * x1 - 4 * x2)) + ((-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * y1 - 4 * y2) * (-4 * y1 + 8 * y2 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (4 * x1 - 8 * x2 + 4 * x3)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) ^ 2) + ((4 * y1 - 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-4 * y1 + 4 * y2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-4 * y1 + 4 * y2)) + ((-4 * y2 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (-4 * y1 + 4 * y2)) + ((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + ((-4 * y2 + 4 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * (4 * y1 - 4 * y2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-4 * y1 + 4 * y2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-4 * y1 + 4 * y2)) + ((4 * x2 - 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (-4 * y1 + 4 * y2)) + ((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + ((4 * x2 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * nu * (4 * y1 - 4 * y2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (-4 * y1 + 4 * y2)) + ((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * (4 * y1 - 4 * y2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (-4 * y1 + 4 * y2)) - ((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * nu * (4 * y1 - 4 * y2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) ^ 2) + (-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 8 * y2 - 4 * y3) * (-4 * y1 + 4 * y2)) + (-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (-4 * y1 + 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (-4 * y1 + 8 * y2 - 4 * y3)) - ((4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * (4 * y1 - 4 * y2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) - (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (-4 * y1 + 4 * y2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + ((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) - (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * nu * (4 * y1 - 4 * y2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * (-4 * y1 + 4 * y2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * (-4 * y1 + 4 * y2)) + ((4 * y1 + 4 * y2 - 8 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 4 * y2)) + ((4 * y1 + 4 * y2 - 8 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (-4 * y1 + 8 * y2 - 4 * y3)) + ((4 * y1 - 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * (4 * y1 - 4 * y2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * nu * (-4 * y1 + 4 * y2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * nu * (-4 * y1 + 4 * y2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 4 * y2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) - ((4 * x1 - 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * nu * (4 * y1 - 4 * y2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + (-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (-4 * y1 + 4 * y2)) + ((4 * y1 - 4 * y2) * (-4 * y1 + 8 * y2 - 4 * y3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (-4 * y1 + 8 * y2 - 4 * y3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) ^ 2) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * (4 * y1 - 4 * y2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (-4 * y1 + 4 * y2)) + ((-4 * y1 + 8 * y2 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 4 * x2) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (-4 * y1 + 8 * y2 - 4 * y3)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * x1 - 8 * x2 + 4 * x3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * nu * (4 * y1 - 4 * y2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * x1 + 4 * x2)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) ^ 2) + ((4 * x1 - 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * y1 + 8 * y2 - 4 * y3) * (-4 * y1 + 4 * y2)) + 0.2e1 * (4 * x1 - 8 * x2 + 4 * x3) * (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) ^ 2) + ((4 * x1 - 8 * x2 + 4 * x3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2)) + 0.2e1 * (-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (4 * y1 - 4 * y2) * (-4 * y1 + 8 * y2 - 4 * y3)) + 0.2e1 * (-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) ^ 2) + ((-4 * x1 + 4 * x2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) * nu * (4 * x1 - 4 * x2)) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y1 + 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (4 * x1 - 4 * x2)) + ((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + ((-4 * y1 + 8 * y2 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1); t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x1 - 4 * x2)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y2 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y2 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + ((-4 * y2 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (4 * x2 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((3 * y2 - 3 * y3) * nu * (-4 * x1 + 4 * x2)) + (-3 * x2 + 3 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (4 * x1 - 4 * x2)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (4 * x1 - 4 * x2)) + ((4 * x2 - 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x2 - 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (4 * x1 - 4 * x2)) + ((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + ((4 * x2 - 4 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (-4 * y2 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-3 * x2 + 3 * x3) * (-4 * x1 + 4 * x2)) + (3 * y2 - 3 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((y1 - y3) * nu * (-4 * x1 + 4 * x2)) - (x1 - x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (4 * x1 - 4 * x2)) - ((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((x1 - x3) * (-4 * x1 + 4 * x2)) + (y1 - y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) * nu * (4 * x1 - 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * y1 + 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (4 * x1 - 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - ((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((y1 - y2) * nu * (-4 * x1 + 4 * x2)) + (x1 - x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2)) - ((-4 * y1 + 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3)) - (-4 * y1 + 8 * y2 - 4 * y3) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (4 * x1 - 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (4 * x1 - 8 * x2 + 4 * x3)) + ((-4 * x1 + 4 * x2) ^ 2) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) - (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((x1 - x2) * (-4 * x1 + 4 * x2)) - (y1 - y2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 + 4 * y2 - 8 * y3) * nu * (4 * x1 - 4 * x2)) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((4 * y1 + 4 * y2 - 8 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((4 * y1 + 4 * y2 - 8 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * x1 - 4 * x2 + 8 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + ((4 * y1 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) - (4 * x1 - 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y3) * nu * (-4 * x1 + 4 * x2)) - (-4 * x1 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 - 4 * x2 + 8 * x3) * (4 * x1 - 4 * x2)) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * (4 * x1 - 4 * x2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((4 * x1 - 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 4 * x2)) + ((-4 * x1 - 4 * x2 + 8 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * y1 + 4 * y2 - 8 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (4 * x1 - 8 * x2 + 4 * x3)) - ((4 * x1 - 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (4 * y1 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-((-4 * x1 + 4 * x3) * (-4 * x1 + 4 * x2)) + (-4 * y1 + 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (4 * x1 - 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (4 * x1 - 4 * x2)) + ((4 * y1 - 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((4 * (-y1 + y3) * nu * (-4 * x1 + 4 * x2)) - 0.4e1 * (-x1 + x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2)) + (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (4 * x1 - 4 * x2)) + ((-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * y1 - 4 * y2) * (-4 * y1 + 8 * y2 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (4 * x1 - 8 * x2 + 4 * x3)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) ^ 2) + ((4 * y1 - 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (-(4 * (-x1 + x3) * (-4 * x1 + 4 * x2)) + 0.4e1 * (-y1 + y3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 4 * y2) * nu * (4 * x1 - 4 * x2)) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) * nu * (4 * x1 - 4 * x2)) + ((-4 * y1 + 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * y1 + 8 * y2 - 4 * y3) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (4 * x1 - 4 * x2)) + ((-4 * y1 + 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 4 * y2) + (4 * x1 - 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (4 * x1 - 8 * x2 + 4 * x3)) + ((-4 * y1 + 8 * y2 - 4 * y3) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (-4 * y1 + 8 * y2 - 4 * y3) + (4 * x1 - 8 * x2 + 4 * x3) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * y1 - 4 * y2) * nu * (-4 * x1 + 4 * x2)) + (-4 * x1 + 4 * x2) * (0.1e1 / 0.2e1 - nu / 0.2e1) * (4 * y1 - 4 * y2)) / 0.2e1) t * E / (-nu ^ 2 + 1) * (0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x1 - 4 * x2) ^ 2) + ((-4 * y1 + 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (4 * x1 - 8 * x2 + 4 * x3) * (4 * x1 - 4 * x2)) + 0.2e1 * (-4 * y1 + 8 * y2 - 4 * y3) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.24e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((4 * x1 - 8 * x2 + 4 * x3) ^ 2) + ((-4 * y1 + 8 * y2 - 4 * y3) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.12e2 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * x1 + 4 * x2) * (4 * x1 - 4 * x2)) + 0.2e1 * (4 * y1 - 4 * y2) * (-4 * y1 + 4 * y2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * ((2 * (-4 * x1 + 4 * x2) * (4 * x1 - 8 * x2 + 4 * x3)) + 0.2e1 * (4 * y1 - 4 * y2) * (-4 * y1 + 8 * y2 - 4 * y3) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.6e1 + 0.1e1 / (y2 * x1 - x1 * y3 - x2 * y1 + x2 * y3 + y1 * x3 - y2 * x3) * (((-4 * x1 + 4 * x2) ^ 2) + ((4 * y1 - 4 * y2) ^ 2) * (0.1e1 / 0.2e1 - nu / 0.2e1)) / 0.2e1);];

